T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
T__6=7
OP3=8
OP4=9
OP5=10
OP6=11
OP7=12
OP8=13
OP9=14
DIGIT=15
INDENT=16
NOT_INDENT=17
SPACE=18
NEWLINE=19
AND=20
VARIABLE=21
OR=22
NOT=23
DIV=24
SHL=25
SHR=26
XOR=27
MOD=28
IS=29
ISNOT=30
OF=31
EQUALS_OPERATOR=32
ADD_OPERATOR=33
MUL_OPERATOR=34
MINUS_OPERATOR=35
DIV_OPERATOR=36
BITWISE_NOT_OPERATOR=37
AND_OPERATOR=38
OR_OPERATOR=39
LESS_THAN=40
GREATER_THAN=41
NOT_OPERATOR=42
XOR_OPERATOR=43
DOT=44
COLON=45
COMMA=46
SEMI_COLON=47
ADDR=48
AS=49
ASM=50
BIND=51
BLOCK=52
BREAK=53
CASE=54
CAST=55
CONCEPT=56
CONST=57
CONTINUE=58
CONVERTER=59
DEFER=60
DISCARD=61
DISTINCT=62
DO=63
ELIF=64
ELSE=65
END=66
ENUM=67
EXCEPT=68
EXPORT=69
FINALLY=70
FOR=71
FROM=72
FUNC=73
IF=74
IMPORT=75
IN=76
INCLUDE=77
INTERFACE=78
ITERATOR=79
LET=80
MACRO=81
METHOD=82
MIXIN=83
NIL=84
NOTIN=85
OBJECT=86
OUT=87
PROC=88
PTR=89
RAISE=90
REF=91
RETURN=92
STATIC=93
TEMPLATE=94
TRY=95
TUPLE=96
TYPE=97
USING=98
WHEN=99
WHILE=100
YIELD=101
OPEN_PAREN=102
CLOSE_PAREN=103
OPEN_BRACE=104
CLOSE_BRACE=105
OPEN_BRACK=106
CLOSE_BRACK=107
MODULUS=108
TRIPLESTR_LIT=109
CHAR_LIT=110
STR_LIT=111
RSTR_LIT=112
GENERALIZED_STR_LIT=113
GENERALIZED_TRIPLESTR_LIT=114
WS=115
AT=116
COMMENT=117
MULTI_LINE_COMMENT=118
MULTI_LINE_COMMENT2=119
SINGLE_MULTI_LINE_COMMENT=120
IDENTIFIER=121
H=122
LETTER=123
INT_LIT=124
HEX_LIT=125
DEC_LIT=126
OCT_LIT=127
BIN_LIT=128
INT8_LIT=129
INT16_LIT=130
INT32_LIT=131
INT64_LIT=132
UINT_LIT=133
UINT8_LIT=134
UINT16_LIT=135
UINT32_LIT=136
UINT64_LIT=137
FLOAT_LIT=138
FLOAT32_LIT=139
FLOAT32_SUFFIX=140
FLOAT64_LIT=141
FLOAT64_SUFFIX=142
EXP=143
HEXDIGIT=144
OCTDIGIT=145
BINDIGIT=146
'`'=1
'='=2
'[:'=3
'{.'=4
'.}'=5
'->'=6
'shared'=7
'..'=11
' '=18
'and'=20
'var'=21
'or'=22
'not'=23
'div'=24
'shl'=25
'shr'=26
'xor'=27
'mod'=28
'is'=29
'isnot'=30
'of'=31
'+'=33
'*'=34
'-'=35
'/'=36
'~'=37
'&'=38
'|'=39
'<'=40
'>'=41
'!'=42
'^'=43
'.'=44
':'=45
','=46
';'=47
'addr'=48
'as'=49
'asm'=50
'bind'=51
'block'=52
'break'=53
'case'=54
'cast'=55
'concept'=56
'const'=57
'continue'=58
'converter'=59
'defer'=60
'discard'=61
'distinct'=62
'do'=63
'elif'=64
'else'=65
'end'=66
'enum'=67
'except'=68
'export'=69
'finally'=70
'for'=71
'from'=72
'func'=73
'if'=74
'import'=75
'in'=76
'include'=77
'interface'=78
'iterator'=79
'let'=80
'macro'=81
'method'=82
'mixin'=83
'nil'=84
'notin'=85
'object'=86
'out'=87
'proc'=88
'ptr'=89
'raise'=90
'ref'=91
'return'=92
'static'=93
'template'=94
'try'=95
'tuple'=96
'type'=97
'using'=98
'when'=99
'while'=100
'yield'=101
'('=102
')'=103
'{'=104
'}'=105
'['=106
']'=107
'%'=108
